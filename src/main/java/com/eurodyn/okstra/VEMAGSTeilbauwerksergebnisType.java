//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.09 at 04:49:50 PM EET 
//


package com.eurodyn.okstra;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VEMAGS_TeilbauwerksergebnisType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VEMAGS_TeilbauwerksergebnisType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opengis.net/gml/3.2}AbstractFeatureType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OKSTRA_ID" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}GUID" minOccurs="0"/&gt;
 *         &lt;element name="zu_Beschriftung" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="referenziert_Fremddatenbestand" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="referenziert_Fremdobjekt" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="zu_Kommunikationsobjekt" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="Fahrauflage_RGST" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Art_der_Auflage" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Geschwindigkeit" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Stundenkilometer" minOccurs="0"/&gt;
 *         &lt;element name="Abstand_zum_Vorausverkehr" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Meter" minOccurs="0"/&gt;
 *         &lt;element name="Schnittgroessenvergleich" type="{http://www.okstra.de/okstra/2.018.2}SchnittgroessenvergleichPropertyType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="Info" type="{http://www.okstra.de/okstra/2.018.2}VEMAGS_InfoPropertyType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="zu_Bauwerksueberfahrt" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" minOccurs="0"/&gt;
 *         &lt;element name="zu_Berechnungsergebnis" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}ObjectRefType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VEMAGS_TeilbauwerksergebnisType", propOrder = {
    "okstraid",
    "zuBeschriftung",
    "referenziertFremddatenbestand",
    "referenziertFremdobjekt",
    "zuKommunikationsobjekt",
    "fahrauflageRGST",
    "artDerAuflage",
    "geschwindigkeit",
    "abstandZumVorausverkehr",
    "schnittgroessenvergleich",
    "info",
    "zuBauwerksueberfahrt",
    "zuBerechnungsergebnis"
})
public class VEMAGSTeilbauwerksergebnisType
    extends AbstractFeatureType
{

    @XmlElement(name = "OKSTRA_ID")
    protected String okstraid;
    @XmlElement(name = "zu_Beschriftung")
    protected List<ObjectRefType> zuBeschriftung;
    @XmlElement(name = "referenziert_Fremddatenbestand")
    protected List<ObjectRefType> referenziertFremddatenbestand;
    @XmlElement(name = "referenziert_Fremdobjekt")
    protected List<ObjectRefType> referenziertFremdobjekt;
    @XmlElement(name = "zu_Kommunikationsobjekt")
    protected List<ObjectRefType> zuKommunikationsobjekt;
    @XmlElement(name = "Fahrauflage_RGST")
    protected String fahrauflageRGST;
    @XmlElement(name = "Art_der_Auflage")
    protected String artDerAuflage;
    @XmlElement(name = "Geschwindigkeit")
    protected Stundenkilometer geschwindigkeit;
    @XmlElement(name = "Abstand_zum_Vorausverkehr")
    protected Meter abstandZumVorausverkehr;
    @XmlElement(name = "Schnittgroessenvergleich")
    protected List<SchnittgroessenvergleichPropertyType> schnittgroessenvergleich;
    @XmlElement(name = "Info")
    protected List<VEMAGSInfoPropertyType> info;
    @XmlElement(name = "zu_Bauwerksueberfahrt")
    protected ObjectRefType zuBauwerksueberfahrt;
    @XmlElement(name = "zu_Berechnungsergebnis")
    protected ObjectRefType zuBerechnungsergebnis;

    /**
     * Gets the value of the okstraid property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOKSTRAID() {
        return okstraid;
    }

    /**
     * Sets the value of the okstraid property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOKSTRAID(String value) {
        this.okstraid = value;
    }

    /**
     * Gets the value of the zuBeschriftung property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the zuBeschriftung property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getZuBeschriftung().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectRefType }
     * 
     * 
     */
    public List<ObjectRefType> getZuBeschriftung() {
        if (zuBeschriftung == null) {
            zuBeschriftung = new ArrayList<ObjectRefType>();
        }
        return this.zuBeschriftung;
    }

    /**
     * Gets the value of the referenziertFremddatenbestand property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referenziertFremddatenbestand property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferenziertFremddatenbestand().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectRefType }
     * 
     * 
     */
    public List<ObjectRefType> getReferenziertFremddatenbestand() {
        if (referenziertFremddatenbestand == null) {
            referenziertFremddatenbestand = new ArrayList<ObjectRefType>();
        }
        return this.referenziertFremddatenbestand;
    }

    /**
     * Gets the value of the referenziertFremdobjekt property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referenziertFremdobjekt property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferenziertFremdobjekt().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectRefType }
     * 
     * 
     */
    public List<ObjectRefType> getReferenziertFremdobjekt() {
        if (referenziertFremdobjekt == null) {
            referenziertFremdobjekt = new ArrayList<ObjectRefType>();
        }
        return this.referenziertFremdobjekt;
    }

    /**
     * Gets the value of the zuKommunikationsobjekt property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the zuKommunikationsobjekt property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getZuKommunikationsobjekt().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObjectRefType }
     * 
     * 
     */
    public List<ObjectRefType> getZuKommunikationsobjekt() {
        if (zuKommunikationsobjekt == null) {
            zuKommunikationsobjekt = new ArrayList<ObjectRefType>();
        }
        return this.zuKommunikationsobjekt;
    }

    /**
     * Gets the value of the fahrauflageRGST property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFahrauflageRGST() {
        return fahrauflageRGST;
    }

    /**
     * Sets the value of the fahrauflageRGST property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFahrauflageRGST(String value) {
        this.fahrauflageRGST = value;
    }

    /**
     * Gets the value of the artDerAuflage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getArtDerAuflage() {
        return artDerAuflage;
    }

    /**
     * Sets the value of the artDerAuflage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setArtDerAuflage(String value) {
        this.artDerAuflage = value;
    }

    /**
     * Gets the value of the geschwindigkeit property.
     * 
     * @return
     *     possible object is
     *     {@link Stundenkilometer }
     *     
     */
    public Stundenkilometer getGeschwindigkeit() {
        return geschwindigkeit;
    }

    /**
     * Sets the value of the geschwindigkeit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Stundenkilometer }
     *     
     */
    public void setGeschwindigkeit(Stundenkilometer value) {
        this.geschwindigkeit = value;
    }

    /**
     * Gets the value of the abstandZumVorausverkehr property.
     * 
     * @return
     *     possible object is
     *     {@link Meter }
     *     
     */
    public Meter getAbstandZumVorausverkehr() {
        return abstandZumVorausverkehr;
    }

    /**
     * Sets the value of the abstandZumVorausverkehr property.
     * 
     * @param value
     *     allowed object is
     *     {@link Meter }
     *     
     */
    public void setAbstandZumVorausverkehr(Meter value) {
        this.abstandZumVorausverkehr = value;
    }

    /**
     * Gets the value of the schnittgroessenvergleich property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the schnittgroessenvergleich property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSchnittgroessenvergleich().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchnittgroessenvergleichPropertyType }
     * 
     * 
     */
    public List<SchnittgroessenvergleichPropertyType> getSchnittgroessenvergleich() {
        if (schnittgroessenvergleich == null) {
            schnittgroessenvergleich = new ArrayList<SchnittgroessenvergleichPropertyType>();
        }
        return this.schnittgroessenvergleich;
    }

    /**
     * Gets the value of the info property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the info property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInfo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VEMAGSInfoPropertyType }
     * 
     * 
     */
    public List<VEMAGSInfoPropertyType> getInfo() {
        if (info == null) {
            info = new ArrayList<VEMAGSInfoPropertyType>();
        }
        return this.info;
    }

    /**
     * Gets the value of the zuBauwerksueberfahrt property.
     * 
     * @return
     *     possible object is
     *     {@link ObjectRefType }
     *     
     */
    public ObjectRefType getZuBauwerksueberfahrt() {
        return zuBauwerksueberfahrt;
    }

    /**
     * Sets the value of the zuBauwerksueberfahrt property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObjectRefType }
     *     
     */
    public void setZuBauwerksueberfahrt(ObjectRefType value) {
        this.zuBauwerksueberfahrt = value;
    }

    /**
     * Gets the value of the zuBerechnungsergebnis property.
     * 
     * @return
     *     possible object is
     *     {@link ObjectRefType }
     *     
     */
    public ObjectRefType getZuBerechnungsergebnis() {
        return zuBerechnungsergebnis;
    }

    /**
     * Sets the value of the zuBerechnungsergebnis property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObjectRefType }
     *     
     */
    public void setZuBerechnungsergebnis(ObjectRefType value) {
        this.zuBerechnungsergebnis = value;
    }

}
