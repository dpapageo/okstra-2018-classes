//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.09 at 04:49:50 PM EET 
//


package com.eurodyn.okstra;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Probe_Dyn_SpaltzugschwellversuchType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Probe_Dyn_SpaltzugschwellversuchType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Probenbezeichnung" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="Probekoerperdurchmesser" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Millimeter" minOccurs="0"/&gt;
 *         &lt;element name="Probekoerperhoehe" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Millimeter" minOccurs="0"/&gt;
 *         &lt;element name="Raumdichte" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Gramm_pro_Kubikzentimeter" minOccurs="0"/&gt;
 *         &lt;element name="elastische_Anfangsdehnung" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Promille" minOccurs="0"/&gt;
 *         &lt;element name="Unterspannung" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Megapascal" minOccurs="0"/&gt;
 *         &lt;element name="Oberspannung" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Megapascal" minOccurs="0"/&gt;
 *         &lt;element name="Prueftemperatur" type="{http://www.okstra.de/okstra/2.018.2/okstra-basis}KeyValuePropertyType" minOccurs="0"/&gt;
 *         &lt;element name="Frequenz" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Hertz" minOccurs="0"/&gt;
 *         &lt;element name="Phasenwinkel" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Grad" minOccurs="0"/&gt;
 *         &lt;element name="Steifigkeitsmodul" type="{http://www.okstra.de/okstra/2.018.2/okstra-typen}Megapascal" minOccurs="0"/&gt;
 *         &lt;element name="Lastwechselzahl_Makroriss" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Probe_Dyn_SpaltzugschwellversuchType", propOrder = {
    "probenbezeichnung",
    "probekoerperdurchmesser",
    "probekoerperhoehe",
    "raumdichte",
    "elastischeAnfangsdehnung",
    "unterspannung",
    "oberspannung",
    "prueftemperatur",
    "frequenz",
    "phasenwinkel",
    "steifigkeitsmodul",
    "lastwechselzahlMakroriss"
})
public class ProbeDynSpaltzugschwellversuchType {

    @XmlElement(name = "Probenbezeichnung")
    protected String probenbezeichnung;
    @XmlElement(name = "Probekoerperdurchmesser")
    protected Millimeter probekoerperdurchmesser;
    @XmlElement(name = "Probekoerperhoehe")
    protected Millimeter probekoerperhoehe;
    @XmlElement(name = "Raumdichte")
    protected GrammProKubikzentimeter raumdichte;
    @XmlElement(name = "elastische_Anfangsdehnung")
    protected Double elastischeAnfangsdehnung;
    @XmlElement(name = "Unterspannung")
    protected Megapascal unterspannung;
    @XmlElement(name = "Oberspannung")
    protected Megapascal oberspannung;
    @XmlElement(name = "Prueftemperatur")
    protected KeyValuePropertyType prueftemperatur;
    @XmlElement(name = "Frequenz")
    protected Hertz frequenz;
    @XmlElement(name = "Phasenwinkel")
    protected Grad phasenwinkel;
    @XmlElement(name = "Steifigkeitsmodul")
    protected Megapascal steifigkeitsmodul;
    @XmlElement(name = "Lastwechselzahl_Makroriss")
    protected BigInteger lastwechselzahlMakroriss;

    /**
     * Gets the value of the probenbezeichnung property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProbenbezeichnung() {
        return probenbezeichnung;
    }

    /**
     * Sets the value of the probenbezeichnung property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProbenbezeichnung(String value) {
        this.probenbezeichnung = value;
    }

    /**
     * Gets the value of the probekoerperdurchmesser property.
     * 
     * @return
     *     possible object is
     *     {@link Millimeter }
     *     
     */
    public Millimeter getProbekoerperdurchmesser() {
        return probekoerperdurchmesser;
    }

    /**
     * Sets the value of the probekoerperdurchmesser property.
     * 
     * @param value
     *     allowed object is
     *     {@link Millimeter }
     *     
     */
    public void setProbekoerperdurchmesser(Millimeter value) {
        this.probekoerperdurchmesser = value;
    }

    /**
     * Gets the value of the probekoerperhoehe property.
     * 
     * @return
     *     possible object is
     *     {@link Millimeter }
     *     
     */
    public Millimeter getProbekoerperhoehe() {
        return probekoerperhoehe;
    }

    /**
     * Sets the value of the probekoerperhoehe property.
     * 
     * @param value
     *     allowed object is
     *     {@link Millimeter }
     *     
     */
    public void setProbekoerperhoehe(Millimeter value) {
        this.probekoerperhoehe = value;
    }

    /**
     * Gets the value of the raumdichte property.
     * 
     * @return
     *     possible object is
     *     {@link GrammProKubikzentimeter }
     *     
     */
    public GrammProKubikzentimeter getRaumdichte() {
        return raumdichte;
    }

    /**
     * Sets the value of the raumdichte property.
     * 
     * @param value
     *     allowed object is
     *     {@link GrammProKubikzentimeter }
     *     
     */
    public void setRaumdichte(GrammProKubikzentimeter value) {
        this.raumdichte = value;
    }

    /**
     * Gets the value of the elastischeAnfangsdehnung property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getElastischeAnfangsdehnung() {
        return elastischeAnfangsdehnung;
    }

    /**
     * Sets the value of the elastischeAnfangsdehnung property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setElastischeAnfangsdehnung(Double value) {
        this.elastischeAnfangsdehnung = value;
    }

    /**
     * Gets the value of the unterspannung property.
     * 
     * @return
     *     possible object is
     *     {@link Megapascal }
     *     
     */
    public Megapascal getUnterspannung() {
        return unterspannung;
    }

    /**
     * Sets the value of the unterspannung property.
     * 
     * @param value
     *     allowed object is
     *     {@link Megapascal }
     *     
     */
    public void setUnterspannung(Megapascal value) {
        this.unterspannung = value;
    }

    /**
     * Gets the value of the oberspannung property.
     * 
     * @return
     *     possible object is
     *     {@link Megapascal }
     *     
     */
    public Megapascal getOberspannung() {
        return oberspannung;
    }

    /**
     * Sets the value of the oberspannung property.
     * 
     * @param value
     *     allowed object is
     *     {@link Megapascal }
     *     
     */
    public void setOberspannung(Megapascal value) {
        this.oberspannung = value;
    }

    /**
     * Gets the value of the prueftemperatur property.
     * 
     * @return
     *     possible object is
     *     {@link KeyValuePropertyType }
     *     
     */
    public KeyValuePropertyType getPrueftemperatur() {
        return prueftemperatur;
    }

    /**
     * Sets the value of the prueftemperatur property.
     * 
     * @param value
     *     allowed object is
     *     {@link KeyValuePropertyType }
     *     
     */
    public void setPrueftemperatur(KeyValuePropertyType value) {
        this.prueftemperatur = value;
    }

    /**
     * Gets the value of the frequenz property.
     * 
     * @return
     *     possible object is
     *     {@link Hertz }
     *     
     */
    public Hertz getFrequenz() {
        return frequenz;
    }

    /**
     * Sets the value of the frequenz property.
     * 
     * @param value
     *     allowed object is
     *     {@link Hertz }
     *     
     */
    public void setFrequenz(Hertz value) {
        this.frequenz = value;
    }

    /**
     * Gets the value of the phasenwinkel property.
     * 
     * @return
     *     possible object is
     *     {@link Grad }
     *     
     */
    public Grad getPhasenwinkel() {
        return phasenwinkel;
    }

    /**
     * Sets the value of the phasenwinkel property.
     * 
     * @param value
     *     allowed object is
     *     {@link Grad }
     *     
     */
    public void setPhasenwinkel(Grad value) {
        this.phasenwinkel = value;
    }

    /**
     * Gets the value of the steifigkeitsmodul property.
     * 
     * @return
     *     possible object is
     *     {@link Megapascal }
     *     
     */
    public Megapascal getSteifigkeitsmodul() {
        return steifigkeitsmodul;
    }

    /**
     * Sets the value of the steifigkeitsmodul property.
     * 
     * @param value
     *     allowed object is
     *     {@link Megapascal }
     *     
     */
    public void setSteifigkeitsmodul(Megapascal value) {
        this.steifigkeitsmodul = value;
    }

    /**
     * Gets the value of the lastwechselzahlMakroriss property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getLastwechselzahlMakroriss() {
        return lastwechselzahlMakroriss;
    }

    /**
     * Sets the value of the lastwechselzahlMakroriss property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setLastwechselzahlMakroriss(BigInteger value) {
        this.lastwechselzahlMakroriss = value;
    }

}
